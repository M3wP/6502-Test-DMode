6502 Decimal Mode Test version 2.01 (Sane VIC20)

Copyright (C) 2014, Daniel England.  
All Rights Reserved.  LGPL License, see below.

"mewpokemon",$24,"hotmail",$2E,"com"
Please include "6502 Decimal Mode Test" in the subject line.

With special thanks to Bruce Clark


-------------------------------------------------------------------------------
  This program is free software: you can redistribute it and/or modify it 
  under the terms of the GNU Lesser General Public License as published by the 
  Free Software Foundation, either version 3 of the License, or (at your 
  option) any later version.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
  or FITNESS FOR A PARTICULAR PURPOSE.  

  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.


  Additional permission under GNU GPL version 3 section 7

      Exceptions are granted to the standard "Appropriate Legal Notices"
      requirements in recognition of the constraints of the target platforms.

      The requirements for the display of "Appropriate Legal Notices" shall be
      deemed sufficiently met if the compiled executable simply contains the
      copyright information ("COPYRIGHT (C) 2014, DANIEL ENGLAND") in clear
      and readable text data (ASCII/PETSCII).  Display of this information 
      according to the original constraints would be appreciated when and if 
      possible.

      In cases where the warranty cannot be displayed, the requirements shall 
      be deemed sufficient met if the user is directed by the application to a 
      source from which this information is available (on a "splash" screen,
      for example), so long as this source is distributed with the compiled 
      execuatable (such as an included "readme" text file which includes the 
      warranty details).
-------------------------------------------------------------------------------


Description
-----------

Implements the test routine as described at:
    http://www.6502.org/tutorials/decimal_mode.html

The original routine was developed after discusion which can be viewed at:
    http://forum.6502.org/viewtopic.php?f=1&t=254

Modifications were made to allow for comprehensive testing.

The program allows for testing for a full 6502 implementation (including
undocumented behaviour) or can be tailored to test 65c02 or 65816 specific
functionality.  Results can be streamed to disk(s) - up to 31 of them.

The program can take an extraordinarily long time to run where there are 
failures, requiring some 10+ hours.

I'd appreciate feedback about any bugs or suggestions.


Contents
--------

A stock VIC20 BASIC program and source.  I have provided a text based 
source version as well as CBM .prg files and .d64 images.  

I am yet to provide a C64 port.

The main program ("MAIN") can be run on a stock VIC20 or an expanded one. For
an unexpaned VIC20, the SaneMeVIC20 Init/Loader ("INIT") must be loaded and 
run first but this is not necessary for an expanded VIC20.

To run on an unexpanded VIC20 (or one with only the +3KB expansion):

        LOAD "*",8
	RUN


The "INIT" program ("*" here) should always be relocated by the BASIC/KERNAL.
This will ensure that it runs properly on an unexpanded VIC20, as well.

To run on an expanded VIC20 you can do the above or the following:

        LOAD "MAIN",8,1
	RUN
	

Compiling
---------

The "sane.bas" BASIC Boot Loader needs to be "tokenised" or compiled for
CBM BASIC V2 and output as "init.prg".  But it is, itself, generated from 
the assembled output of "SaneMEVIC20.asm", without the load address and 
converted to BASIC DATA statements.

The "strap.bas" BASIC Boot Strap needs to be "tokenised" or compiled for
CBM BASIC V2 and output as "strap.prg".  The load address (the first two
bytes) of "strap.prg" need to be stripped and the result saved as 
"strap.bin".

The "main.prg" program is generated by assembling "main.asm" which 
requires "strap.bin", "platform.asm", "throb.asm" and "testdmode.asm".


Notes
-----

I have almost run out of memory...  Some 49 free bytes.  I have not been able
to implement the specifc test case selection functionality and there is no
reporting of the last state when an error occurs (only that there was an error
or not).  I will try to address these problems after my eyes work again.

On the other hand, disk writing is done and the program is pretty spiffy in 
terms of looks and performance, considering what I have to work with.  
Check out my throbber unit!  Awesome...

I probably need help with optimisations because its not my forte as such...

Enjoy!  



Daniel.
